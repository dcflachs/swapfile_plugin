<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name        "swapfile">
<!ENTITY author      "dcflachs">
<!ENTITY version     "2021.07.11">
<!ENTITY launch      "Settings/&name;">
<!ENTITY packageVER  "&version;">
<!ENTITY packageMD5  "8b5e705543b541c73f6aa9f0292d3cbb">
<!ENTITY packageName "&name;-package-&packageVER;">
<!ENTITY packagefile "&packageName;.txz">
<!ENTITY github     	"dcflachs/&name;_plugin">
<!ENTITY pluginURL   "https://raw.githubusercontent.com/&github;/master/&name;.plg">
<!ENTITY packageURL  "https://github.com/&github;/releases/download/&version;/&packagefile;">
<!ENTITY pluginLOC   "/boot/config/plugins/&name;">
<!ENTITY emhttpLOC   "/usr/local/emhttp/plugins/&name;">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         launch="&launch;"
         pluginURL="&pluginURL;"
         icon="microchip"
         min="6.9.0"
>

<CHANGES>
###2021.07.11 
- Added help text.
###2021.07.10 
- Added support for setting swappiness.
###2021.06.09 
- Fix saving settings.
###2021.05.27
- Fix menu icon.
###2021.05.26 
- Added support for creating swapfile on BTRFS.
- Removed auto-update on start functionality.
- Cleanup of plugin installation code.
###2021.05.18
- Forked from theone11/swapfile_plugin.
</CHANGES>

<!-- The 'pre-install' script. -->
<FILE Run="/bin/bash">
<INLINE>
# Remove old 'source' files
rm -f $(ls &pluginLOC;/&name;*.txz 2>/dev/null|grep -v '&packageVER;')
</INLINE>
</FILE>

<FILE Name="&pluginLOC;/&packagefile;" Run="upgradepkg --install-new">
<URL>&packageURL;</URL>
<MD5>&packageMD5;</MD5>
</FILE> 

<FILE Run="/bin/bash">
<INLINE>
echo "Creating symlink from &emhttpLOC;/scripts/rc.&name; to /etc/rc.d/rc.&name;"
ln -s "&emhttpLOC;/scripts/rc.&name;" "/etc/rc.d/rc.&name;"

<!--# Create or fix configuration file -->
if [ ! -f "&pluginLOC;/&name;.cfg" ] ; then
  echo "Configuration file not found. Creating configuration file..."
  echo "# SwapFile plugin configuration - Do not modify manually - Change via WEBUI" > "&pluginLOC;/&name;.cfg"
fi
echo "Checking all configuration file parameters exist"
if [ ! `cat "&pluginLOC;/&name;.cfg" | grep SWAP_ENABLE_ON_BOOT` ]; then echo "SWAP_ENABLE_ON_BOOT=\"false\"" >> "&pluginLOC;/&name;.cfg"; fi
if [ ! `cat "&pluginLOC;/&name;.cfg" | grep SWAP_DELETE` ]; then echo "SWAP_DELETE=\"false\"" >> "&pluginLOC;/&name;.cfg"; fi
if [ ! `cat "&pluginLOC;/&name;.cfg" | grep SWAP_LOCATION` ]; then echo "SWAP_LOCATION=\"/mnt/cache\"" >> "&pluginLOC;/&name;.cfg"; fi
if [ ! `cat "&pluginLOC;/&name;.cfg" | grep SWAP_FILENAME` ]; then echo "SWAP_FILENAME=\"swapfile\"" >> "&pluginLOC;/&name;.cfg"; fi
if [ ! `cat "&pluginLOC;/&name;.cfg" | grep SWAP_NAME` ]; then echo "SWAP_NAME=\"UNRAID-SWAP\"" >> "&pluginLOC;/&name;.cfg"; fi
if [ ! `cat "&pluginLOC;/&name;.cfg" | grep SWAP_SIZE_MB` ]; then echo "SWAP_SIZE_MB=\"2048\"" >> "&pluginLOC;/&name;.cfg"; fi
if [ ! `cat "&pluginLOC;/&name;.cfg" | grep SWAPPINESS` ]; then echo "SWAPPINESS=\"60\"" >> "&pluginLOC;/&name;.cfg"; fi
</INLINE>
</FILE>

<!--
The 'post-install' script
-->
<FILE Run="/bin/bash">
<INLINE>
echo ""
echo "----------------------------------------------------"
echo " &name; has been installed."
echo " Version: &version;"
echo "----------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
if [ -f "/etc/rc.d/rc.&name;" ]; then "/etc/rc.d/rc.&name;" stop; fi
if [ -f "/etc/rc.d/rc.&name;" ]; then rm -f "/etc/rc.d/rc.&name;"; fi

removepkg &packageName;

# Remove plugin related files
rm -f $(ls &pluginLOC;/&name;*.txz 2>/dev/null|grep -v '&packageVER;')

</INLINE>
</FILE> 

</PLUGIN>
